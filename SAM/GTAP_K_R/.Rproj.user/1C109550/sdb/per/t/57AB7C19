{
    "contents" : "## This file does what sector.gms and IOimport.gms did\n# (1) classifying IO entities\n# (2) Construct variables using IO data\n# (3) Enter Energy Balance entities\n# (4) Save D1_'t'.Rdata (Data with IO variables)\n\nt=2010\nD_name0=paste(paste(\"D0\",t,sep=\"_\"),\"Rdata\",sep=\".\")\nload(file=file.path(\"Agg/IOT\",D_name0))\n##(1) Construct IO variables\n\n### (i) 82 industry mapping\nio=unique(indindex_82[1:82,2])# model industry\nmapi_G=indindex_82[1:82,1:2]# industry mapping\nmapi_G$basecode_col=paste(\"X\",mapi_G[,1],sep=\"\")\nind_Transp_82=c(55,56)# Air and Water (international transportation included)\n\n\n### (ii) 384 industry mapping\nmapi_sec0=indindex_384[1:384,1:2]\nmapi_sec0$basecode_col=paste(\"X\",mapi_sec0[,1],sep=\"\")\n\n\n##(3) Classifying IO entities \n\n\nVAindex=indindex_82[!is.na(indindex_82$Va_index),c(\"Va_index\", \"Va_name\", \"Va_dict\")]\nFDindex=indindex_82[!is.na(indindex_82$FD_index),c(\"FD_index\", \"FD_name\",\"FD_dict\")]\n\nFin_Demand=c(\"Final_Pc\", \"Final_Gc\",\"Final_Pk\", \"Final_Gk\",\"Final_St\", \"Gold\", \"Final_Ex\", \"Final_Tot\")\nVA=c(\"PTAXin\",\"labor\",\"surplus\",\"dep\",\"PTAXetc\")\nVA_0=VA[VA!=\"PTAXin\"]# Va without tax\nFACT=c(\"labor\", \"dep\",\"surplus\") # production factor\nPTAXVA=c(\"PTAXin\",\"PTAXout\") # tax in va\nFin_DD=c(\"Final_Pc\", \"Final_Gc\",\"Final_Pk\", \"Final_Gk\",\"Final_St\", \"Gold\")#Domestic Demand\nFin_DX=c(\"Final_Ex\") #Foreign Demand\nFin_K=c(\"Final_Pk\", \"Final_Gk\",\"Final_St\", \"Gold\")#Investment demand\nresout=c(\"Resout\")\nresin=c(\"Resin\")\n\n## Non io entities\nR0=c(\"China\",\"EUR\",\"India\",\"Japan\",\"Korea\",\"LAF\",\"MEA\",\"OEU\",\"OTH\",\"SEA\",\"USA\")\nFP=c(\"Land\",\"Capital\",\"Lab\",\"NatRes\",\"RNDsvs\")#Production Factor in model\n\n\n\n# (5) Construct variablbes using IO data\n\n##(0) assign VA names and FD names to IO tables\n\nn1=82# number of industries\nn2=384 # number of industies\n### Total (82)\nDimT_82=dim(IO_T_N_82)\nrownames(IO_T_N_82)[((n1+1):DimT_82[1])]=VAindex[,\"Va_name\"]\ncolnames(IO_T_N_82)[((n1+2):DimT_82[2])]=FDindex[,\"FD_name\"]\nrownames(IO_T_B_82)[((n1+1):DimT_82[1])]=VAindex[,\"Va_name\"]\ncolnames(IO_T_B_82)[((n1+2):DimT_82[2])]=FDindex[,\"FD_name\"]\n\nDimMD_82=dim(IO_D_N_82)\n\n### Domestic (82)\nrownames(IO_D_N_82)[((n1+1):DimMD_82[1])]=VAindex[(1:(DimMD_82[1]-n1)),\"Va_name\"]\ncolnames(IO_D_N_82)[((n1+2):DimMD_82[2])]=FDindex[(1:(DimMD_82[2]-(n1+1))),\"FD_name\"]\nrownames(IO_D_B_82)[((n1+1):DimMD_82[1])]=VAindex[(1:(DimMD_82[1]-n1)),\"Va_name\"]\ncolnames(IO_D_B_82)[((n1+2):DimMD_82[2])]=FDindex[(1:(DimMD_82[2]-(n1+1))),\"FD_name\"]\n\n#### Import (82)\nrownames(IO_M_N_82)[((n1+1):DimMD_82[1])]=VAindex[(1:(DimMD_82[1]-n1)),\"Va_name\"]\ncolnames(IO_M_N_82)[((n1+2):DimMD_82[2])]=FDindex[(1:(DimMD_82[2]-(n1+1))),\"FD_name\"]\nrownames(IO_M_B_82)[((n1+1):DimMD_82[1])]=VAindex[(1:(DimMD_82[1]-n1)),\"Va_name\"]\ncolnames(IO_M_B_82)[((n1+2):DimMD_82[2])]=FDindex[(1:(DimMD_82[2]-(n1+1))),\"FD_name\"]\n\n### Total(384)\nDimT_384=dim(IO_T_N_384)\nrownames(IO_T_N_384)[((n2+1):DimT_384[1])]=VAindex[,\"Va_name\"]\ncolnames(IO_T_N_384)[((n2+2):DimT_384[2])]=FDindex[,\"FD_name\"]\nrownames(IO_T_B_384)[((n2+1):DimT_384[1])]=VAindex[,\"Va_name\"]\ncolnames(IO_T_B_384)[((n2+2):DimT_384[2])]=FDindex[,\"FD_name\"]\n\n### Domestic(384)\nDimMD_384=dim(IO_D_N_384)\nrownames(IO_D_N_384)[((n2+1):DimMD_384[1])]=VAindex[(1:(DimMD_384[1]-n2)),\"Va_name\"]\ncolnames(IO_D_N_384)[((n2+2):DimMD_384[2])]=FDindex[(1:(DimMD_384[2]-(n2+1))),\"FD_name\"]\nrownames(IO_D_B_384)[((n2+1):DimMD_384[1])]=VAindex[(1:(DimMD_384[1]-n2)),\"Va_name\"]\ncolnames(IO_D_B_384)[((n2+2):DimMD_384[2])]=FDindex[(1:(DimMD_384[2]-(n2+1))),\"FD_name\"]\n\n#### Import(384)\nrownames(IO_M_N_384)[((n2+1):DimMD_384[1])]=VAindex[(1:(DimMD_384[1]-n2)),\"Va_name\"]\ncolnames(IO_M_N_384)[((n2+2):DimMD_384[2])]=FDindex[(1:(DimMD_384[2]-(n2+1))),\"FD_name\"]\nrownames(IO_M_B_384)[((n2+1):DimMD_384[1])]=VAindex[(1:(DimMD_384[1]-n2)),\"Va_name\"]\ncolnames(IO_M_B_384)[((n2+2):DimMD_384[2])]=FDindex[(1:(DimMD_384[2]-(n2+1))),\"FD_name\"]\n\n##(i) 82 ind\n###(i-1) A table \n\nA_T_N_82=IO_T_N_82[1:n1,(2:(n1+1))]\nA_D_N_82=IO_D_N_82[1:n1,(2:(n1+1))]\nA_M_N_82=IO_M_N_82[1:n1,(2:(n1+1))]\n\nA_T_B_82=IO_T_B_82[1:n1,(2:(n1+1))]\nA_D_B_82=IO_D_B_82[1:n1,(2:(n1+1))]\nA_M_B_82=IO_M_B_82[1:n1,(2:(n1+1))]\n\n###(i-2) Final demand\n\nF_T_N_82=IO_T_N_82[1:n1,!is.na(match(colnames(IO_T_N_82),Fin_Demand))]\nF_D_N_82=IO_D_N_82[1:n1,!is.na(match(colnames(IO_T_N_82),Fin_Demand))]\nF_M_N_82=IO_M_N_82[1:n1,!is.na(match(colnames(IO_T_N_82),Fin_Demand))]\n\nF_T_B_82=IO_T_B_82[1:n1,!is.na(match(colnames(IO_T_N_82),Fin_Demand))]\nF_D_B_82=IO_D_B_82[1:n1,!is.na(match(colnames(IO_T_N_82),Fin_Demand))]\nF_M_B_82=IO_M_B_82[1:n1,!is.na(match(colnames(IO_T_N_82),Fin_Demand))]\n\n###(i-3) Import taxes (No tarrif)\nTar10=rep(0,n1)\nTaxM10=data.frame(IO_T_N_82[1:n1,\"PTAXim\"])\ncolnames(TaxM10)=\"PTAXim\"\nTar0=Tar10\nTar000=Tar0\nTaxM0=TaxM10\nTaxM000=TaxM10\n\n\n###(i-4) Total (Domestic) output = Intermediate input + VA + Resin-Resout\noutput=c(\"Qtotal\",\"Qself\",\"PTAXd\",\"Psub\",\"Cmargin\",\"Tmargin\")\nxpnorm10=IO_T_N_82[1:n1,!is.na(match(colnames(IO_T_N_82),output))]\nxpb10=IO_T_B_82[1:n1,!is.na(match(colnames(IO_T_B_82),output))]\n\nxpnorm=data.frame(rowSums(xpnorm10))\ncolnames(xpnorm)=\"xpnorm\"\nXP_B=data.frame(rowSums(xpb10))\ncolnames(XP_B)=\"XP_B\"\n\n###(i-5) Scrap in (Scrap in row ), Scrap out (Scrap in column)\n#### Scrap in\nXPN_resin=data.frame(t(IO_T_N_82[\"Resin\",2:(n1+1)]))\nXPB_resin=data.frame(t(IO_T_B_82[\"Resin\",2:(n1+1)]))\n####Scrap out\n\nXPN_resout=data.frame(IO_T_N_82[1:n1,\"Resout\"])\ncolnames(XPN_resout)=\"Resout\"\nXPB_resout=data.frame(IO_T_B_82[1:n1,\"Resout\"])\ncolnames(XPB_resout)=\"Resout\"\n###(i-6) VA : VA is in IO_T_N, IO_T_B only. We use V_N for producers' price and V_B for basic price.\nV_N_82=IO_T_N_82[!is.na(match(rownames(IO_T_N_82),VA)),2:(n1+1)]\nV_B_82=IO_T_B_82[!is.na(match(rownames(IO_T_B_82),VA)),2:(n1+1)]\n\n### Since we don't have separate subsidies, we don't integrate tax and subsidy in V_N and V_B\n### subsidies, however, can be recovered from IO_T_N . The Psub column is subsidy\n\n##(ii) 384 ind\n###(ii-1) A table \n\nA_T_N_384=IO_T_N_384[1:n2,(2:(n2+1))]\nA_D_N_384=IO_D_N_384[1:n2,(2:(n2+1))]\nA_M_N_384=IO_M_N_384[1:n2,(2:(n2+1))]\n\nA_T_B_384=IO_T_B_384[1:n2,(2:(n2+1))]\nA_D_B_384=IO_D_B_384[1:n2,(2:(n2+1))]\nA_M_B_384=IO_M_B_384[1:n2,(2:(n2+1))]\n\n###(ii-2) Final demand\n\nF_T_N_384=IO_T_N_384[1:n2,!is.na(match(colnames(IO_T_N_384),Fin_Demand))]\nF_D_N_384=IO_D_N_384[1:n2,!is.na(match(colnames(IO_T_N_384),Fin_Demand))]\nF_M_N_384=IO_M_N_384[1:n2,!is.na(match(colnames(IO_T_N_384),Fin_Demand))]\n\nF_T_B_384=IO_T_B_384[1:n2,!is.na(match(colnames(IO_T_N_384),Fin_Demand))]\nF_D_B_384=IO_D_B_384[1:n2,!is.na(match(colnames(IO_T_N_384),Fin_Demand))]\nF_M_B_384=IO_M_B_384[1:n2,!is.na(match(colnames(IO_T_N_384),Fin_Demand))]\n\n###(ii-3) Import taxes (No tarrif)\nTar_0=rep(0,n2)\nTaxM_0=data.frame(IO_T_N_384[1:n2,\"PTAXim\"])\ncolnames(TaxM_0)=\"PTAXim\"\n\n\n###(ii-4) Total (Domestic) output = Intermediate input + VA + Resin-Resout\n#output=c(\"Qtotal\",\"Qself\",\"PTAXd\",\"Psub\",\"Cmargin\",\"Tmargin\")\nXP_00=IO_T_N_384[1:n2,!is.na(match(colnames(IO_T_N_384),output))]\nXP_B00=IO_T_B_384[1:n2,!is.na(match(colnames(IO_T_B_384),output))]\n\nXP_0=data.frame(rowSums(XP_00))\ncolnames(XP_0)=\"XP_0\"\nXP_B0=data.frame(rowSums(XP_B00))\ncolnames(XP_B0)=\"XP_B0\"\n###(ii-5) Scrap in (Scrap in row ), Scrap out (Scrap in column)\n#### Scrap in\nresin_0=data.frame(t(IO_T_N_384[\"Resin\",2:(n2+1)]))\nresin_b0=data.frame(t(IO_T_B_384[\"Resin\",2:(n2+1)]))\n####Scrap out\n\nresout_0=data.frame(IO_T_N_384[1:n2,\"Resout\"])\ncolnames(resout_0)=\"Resout\"\nresout_b0=data.frame(IO_T_B_384[1:n2,\"Resout\"])\ncolnames(resout_b0)=\"Resout\"\n\n###(ii-6) VA : VA is in IO_T_N, IO_T_B only. We use V_N for producers' price and V_B for basic price.\nV_N_384=IO_T_N_384[!is.na(match(rownames(IO_T_N_384),VA)),2:(n2+1)]\nV_B_384=IO_T_B_384[!is.na(match(rownames(IO_T_B_384),VA)),2:(n2+1)]\n\n\n\n# (5) Energy Balance entities\n\n##(5-1)IO Energy industries (384 industry)\n#0026           \"Anthracite\"\n#0027           \"Bituminous coal\"\n#0028           \"Crude petroleum\"\n#0029           \"Natural gas\"\n#0100           \"Coal briquettes\"\n#0099           \"Coke and other coal products\"\n#0101           \"Naphtha\"\n#0102           \"Gasoline\"\n#0103           \"Jet oil\"\n#0104           \"Kerosene\"\n#0105           \"Light oil\"\n#0106           \"Heavy oil\"\n#0107           \"Liquefied petroleum gas\"\n#0108           \"Refined mixture for fuel oil\"\n#0109           \"Lubricants and Grease\"\n#0110           \"Misc. petroleum refinery products\"\n#0274           \"Hydro power generation\"\n#0275           \"thermal power generation\"\n#0276           \"nuclear power generation\"\n#0277           \"self generation electricity\"\n#0278           \"New Renewable Energy\"\n#0279           \"Manufactured gas supply\"\n#0280           \"Steam and hot water supply\"\n\nENG_N=c(26:29,99,100:110,274:280)\n\nENGind_index=indindex_384[ENG_N,1:2]\nENGind_index$basecode_col=paste(\"X\",ENGind_index$basecode_row,sep=\"\")\n\n\n\n\n\n#save\nnames_IO=c(\"IO_T_N_82\",\"IO_D_N_82\",\"IO_M_N_82\",\"IO_T_N_384\",\"IO_D_N_384\",\"IO_M_N_384\",\"IO_T_B_82\",\"IO_D_B_82\",\"IO_M_B_82\",\"IO_T_B_384\",\"IO_D_B_384\",\"IO_M_B_384\")\nnames_index=c(\"indindex_82\",\"io\",\"mapi_G\",\"ind_Transp_82\",\"indindex_384\",\"mapi_sec0\",\"VAindex\",\"FDindex\",\"Fin_Demand\",\"VA\",\"VA_0\",\"FACT\",\"PTAXVA\",\"Fin_DD\",\"Fin_DX\",\"Fin_K\",\"resout\",\"resin\",\"R0\",\"FP\",\"output\")\nnames_82=c(\"A_T_N_82\",\"A_D_N_82\",\"A_M_N_82\",\"A_T_B_82\",\"A_D_B_82\",\"A_M_B_82\",\"F_T_N_82\",\"F_D_N_82\",\"F_M_N_82\",\"F_T_B_82\",\"F_D_B_82\",\"F_M_B_82\",\"Tar10\",\"TaxM10\",\"Tar0\",\"Tar000\",\"TaxM0\",\"TaxM000\",\"xpnorm10\",\"xpb10\",\"xpnorm\",\"XP_B\",\"XPN_resin\",\"XPB_resin\",\"XPN_resout\",\"XPB_resout\",\"V_N_82\",\"V_B_82\")\nnames_384=c(\"A_T_N_384\",\"A_D_N_384\",\"A_M_N_384\",\"A_T_B_384\",\"A_D_B_384\",\"A_M_B_384\",\"F_T_N_384\",\"F_D_N_384\",\"F_M_N_384\",\"F_T_B_384\",\"F_D_B_384\",\"F_M_B_384\",\"Tar_0\",\"TaxM_0\",\"XP_00\",\"XP_B00\",\"XP_0\",\"XP_B0\",\"resin_0\",\"resin_b0\",\"resout_0\",\"resout_b0\",\"V_N_384\",\"V_B_384\")\nnames_ENG=c(\"ENGind_index\",\"EBS\")\n\n\nD_name1=paste(paste(\"D1\",t,sep=\"_\"),\"Rdata\",sep=\".\")\nsave(list=c(names_IO,names_index,names_82,names_384,names_ENG),file=D_name1)\n# load(file=D_name1)",
    "created" : 1459995790846.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2630437145",
    "id" : "57AB7C19",
    "lastKnownWriteTime" : 1437524926,
    "path" : "C:/Users/sungw/OneDrive/work_2016/0000_Hybrid_2nd/CGE/SAM/GTAP_K_R/Agg/IOT/IOimport.r",
    "project_path" : "Agg/IOT/IOimport.r",
    "properties" : {
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "type" : "r_source"
}