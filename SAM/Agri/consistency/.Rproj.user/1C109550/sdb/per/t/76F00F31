{
    "contents" : "## This is temporary agriculture model SAM. Since it has to be linked to 2015 Bottom Up model, the grain ind (42) should be shared in Rice and Barley. \n## The new ind compostion in 2016, on the other hand, separate graining industry as Food industry. \n## If one industry is not in the agriculture in TD but in BU, then the cost differenetial is inevitable. \n## So we change the TD ind composition, so that Rice and Barley has same total cost in BU and TD.\n\n\n## load sam aggregation function\n#source(\"../GTAP_K_R/GTAP_K_R.r\")\nsource(\"../IO/agg_agri_20160621.r\")\nsource(\"../GHG/agg_ghg_agri_20160621.r\")\nsource(\"sam_2010.r\")\nsecter_BR=read.csv(file=\"sector_agri_BR.csv\",header=T,as.is=T)\n\n### A. Model SAM\n## input should be prepared as follows.\n#STEP 1: Size.SAM Determine the size of SAM   \n\nind=length(unique(secter_BR$sector_ind))\ngreen=1\nfac=2\nh=1\ngov=1\nNres=1\ntax=4\nS_I=1\nROW=1\n\nSize.Sam=c(ind,green,fac,h,gov,Nres,tax,S_I,ROW)\n\n#STEP 2: data.out : NON I-O data\n#YTAX =current tax+ social contribution in individual use(2011, National Income. 'Income Account by institutional sectors') \nYTAX=(49205.3+115821.5)*1000\n#TRANSFER =Social transfer in general government use (2011,National Income. 'Income Account by institutional sectors' )\nTRANSFER=43360.5*1000\n\ndata.out=c(YTAX,TRANSFER)\n\n# STEP 3: I-O data\n##load I-O data (model)\nIO_model=read.csv(\"IO_agri_model.csv\",header=T, as.is=T)\nrownames(IO_model)=IO_model[,1]\nIO_model=IO_model[,-1]\n# clean up IO: getting rid of subsums\nn_totalrow=c(\"idinput1\", \"idinput2\", \"VA\", \"Tinput\")\nn_totalcol=c(\"Dint\", \"Dfin\", \"Dtotal\", \"Qtotal\",\"Stotal_b\",\"Contotal\",\"Stotal_p\" )\nIO_model1=IO_model[is.na(match(rownames(IO_model),n_totalrow)),]\nIO_model2=IO_model1[,is.na(match(colnames(IO_model),n_totalcol))]\n\n\nDIO=as.matrix(IO_model2)\n\nSAM_model=data.frame(SAM_agg_basic(Size.Sam,data.out,DIO))\n\nm_ind_name=rownames(IO_model2)[1:ind]\nm_Activity_name=paste(m_ind_name,\"-a\",sep=\"\")\nm_commodity_name=paste(m_ind_name,\"-c\",sep=\"\")\nfactor_name=c(\"Labor\",\"Capital\")\nInst_name1=c(\"Household\",\"GoV\",\"NRES\")\ntax_name=c(\"Ptaxin\",\"Ptaxetc\",\"Tarrif\",\"YTAX\")\nInst_name2=c(\"S-I\",\"ROW\")\nmodel_SAM_name=c(m_Activity_name,\"CO2-a\",m_commodity_name,\"CO2-c\",factor_name,Inst_name1,tax_name,Inst_name2)\nrownames(SAM_model)=model_SAM_name\ncolnames(SAM_model)=model_SAM_name\n\n\n### C. Boehringer and Rutherford SAM\n\nind_br=length(unique(secter_BR$BR_ind))\nSize_br.Sam=c(ind_br,green,fac,h,gov,Nres,tax,S_I,ROW)\n\n# I-O data_group\n##load I-O data (Group)\nIO_BR=read.csv(\"IO_agri_BR.csv\",header=T, as.is=T)\nrownames(IO_BR)=IO_BR[,1]\nIO_BR=IO_BR[,-1]\n# clean up IO: getting rid of subsums\nn_totalrow=c(\"idinput1\", \"idinput2\", \"VA\", \"Tinput\")\nn_totalcol=c(\"Dint\", \"Dfin\", \"Dtotal\", \"Qtotal\",\"Stotal_b\",\"Contotal\",\"Stotal_p\" )\nIO_BR1=IO_BR[is.na(match(rownames(IO_BR),n_totalrow)),]\nIO_BR2=IO_BR1[,is.na(match(colnames(IO_BR),n_totalcol))]\n\nDIO_BR=as.matrix(IO_BR2)\n\nSAM_BR=data.frame(SAM_agg_basic(Size_br.Sam,data.out,DIO_BR))\n\nbr_ind_name=rownames(IO_BR2)[1:ind_br]\nbr_Activity_name=paste(br_ind_name,\"-a\",sep=\"\")\nbr_commodity_name=paste(br_ind_name,\"-c\",sep=\"\")\nBR_SAM_name=c(br_Activity_name,\"CO2-a\",br_commodity_name,\"CO2-c\",factor_name,Inst_name1,tax_name,Inst_name2)\nrownames(SAM_BR)=BR_SAM_name\ncolnames(SAM_BR)=BR_SAM_name\n\n### D. add GHG total\n\nGHG_model=read.csv(file=\"GHG_agri_model_p_20160621.csv\",header=T,as.is=T)\n#GHG_model[,(2:dim(GHG_model)[2])]=GHG_model[,(2:dim(GHG_model)[2])]/100000 # in 100,000 ton\nrownames(GHG_model)=GHG_model$X\n\nSAM_model=SAM_model/1000 #1,000,000,000 won\n\n#replace negative capital cost to mimimum positive capital cost ratio to Total cost*total cost\nKTC_ratio=SAM_model[\"Capital\",1:ind]/colSums(SAM_model[,1:ind])\nminK_ind=which(SAM_model[\"Capital\",]<0)\naltK=colSums(SAM_model[,1:ind])*min(KTC_ratio[KTC_ratio>0])\ndK=altK-SAM_model[\"Capital\",1:ind]\n\n##step 1. change capital cost\nSAM_model_k1=SAM_model\nSAM_model_k1[\"Capital\",minK_ind]=altK[minK_ind]\n##Step 2. change ptaxin to make up for increased cost (government subsidy is given to guarantee mimimum surplus)\nSAM_model_k2=SAM_model_k1\nSAM_model_k2[\"Ptaxin\",minK_ind]=SAM_model_k2[\"Ptaxin\",minK_ind]-dK[minK_ind]\n##Step 3. change household capital income (matching inreased capital cost)\nSAM_model_k3=SAM_model_k2\nSAM_model_k3[\"Household\",\"Capital\"]=sum(SAM_model_k3[\"Capital\",])\n##Step 4. change government ptaxin revenue (subtracting subsidy to guarantee miminum surplus)\nSAM_model_k4=SAM_model_k3\nSAM_model_k4[\"GoV\",\"Ptaxin\"]=sum(SAM_model_k4[\"Ptaxin\",])\n##Step 5. adjust household saving and government saving \nSAM_model_k5=SAM_model_k4\nSAM_model_k5[\"S-I\",\"Household\"]=sum(SAM_model_k5[\"Household\",])-(sum(SAM_model_k5[,\"Household\"])-SAM_model_k5[\"S-I\",\"Household\"])\nSAM_model_k5[\"S-I\",\"GoV\"]=sum(SAM_model_k5[\"GoV\",])-(sum(SAM_model_k5[,\"GoV\"])-SAM_model_k5[\"S-I\",\"GoV\"])\n\nSAM_model_ng=SAM_model\nSAM_model[\"CO2-c\",(1:ind)]=as.numeric(GHG_model[\"Total\",(2:(ind+1))])\nSAM_model[\"GoV\",\"CO2-a\"]=sum(GHG_model[\"Total\",(2:(ind+1))])\nSAM_model[\"CO2-a\",\"CO2-c\"]=sum(GHG_model[\"Total\",(2:(ind+1))])\nSAM_model[(1:ind),\"GoV\"]=as.numeric(GHG_model[\"Total\",(2:(ind+1))])\n\ncheck_model=max(abs(colSums(SAM_model)-rowSums(SAM_model)))\ncheck_model\n\n\nSAM_model_ng_pos=SAM_model_k5\nSAM_model_k5[\"CO2-c\",(1:ind)]=as.numeric(GHG_model[\"Total\",(2:(ind+1))])\nSAM_model_k5[\"GoV\",\"CO2-a\"]=sum(GHG_model[\"Total\",(2:(ind+1))])\nSAM_model_k5[\"CO2-a\",\"CO2-c\"]=sum(GHG_model[\"Total\",(2:(ind+1))])\nSAM_model_k5[(1:ind),\"GoV\"]=as.numeric(GHG_model[\"Total\",(2:(ind+1))])\n\ncheck_model_5=max(abs(colSums(SAM_model_k5)-rowSums(SAM_model_k5)))\ncheck_model_5\n\n\nGHG_BR=read.csv(file=\"GHG_agri_BR_p_20160621.csv\",header=T, as.is=T)\n#GHG_BR[,(2:dim(GHG_BR)[2])]=GHG_BR[,(2:dim(GHG_BR)[2])]/100000 # in 100,000 ton\nrownames(GHG_BR)=GHG_BR$X\n\nSAM_br=SAM_BR/1000\nSAM_br_ng=SAM_br\nSAM_br[\"CO2-c\",(1:ind_br)]=as.numeric(GHG_BR[\"Total\",(2:(ind_br+1))])\nSAM_br[\"GoV\",\"CO2-a\"]=sum(GHG_BR[\"Total\",(2:(ind_br+1))])\nSAM_br[\"CO2-a\",\"CO2-c\"]=sum(GHG_BR[\"Total\",(2:(ind_br+1))])\nSAM_br[(1:ind_br),\"GoV\"]=as.numeric(GHG_BR[\"Total\",(2:(ind_br+1))])\ncheck_br=max(abs(colSums(SAM_br)-rowSums(SAM_br)))\ncheck_br\n\n##adjust rice and barley TD-BU inconsistency\n\nSAM_model_adj=SAM_model_ng_pos\ndRC0=rowSums(SAM_model_ng_pos)-colSums(SAM_model_ng_pos)\n### step 0. obtain adjusting factor\nRiceBarley_new=read.csv(\"consistency/ricebarley_new_2016.csv\",header=T,as.is=T)\nRiceBarley_new$Group.1[RiceBarley_new$Group.1==\"Nres\"]=\"NRES\"\n\n### Step 1. input adjust\nSAM_model_adj[match(RiceBarley_new$Group.1,rownames(SAM_model_adj)),c(\"Rice-a\",\"Barley-a\")]=(RiceBarley_new[,(3:4)]/1000)\ndRC1=rowSums(SAM_model_adj)-colSums(SAM_model_adj)\nprint(\"DRC1\")\nprint(dRC1)\n\nSAM_model_adj2=SAM_model_adj\n\n### Step 2.dom productio adjustment\n\nSAM_model_adj2[\"Rice-a\",\"Rice-c\"]=sum(SAM_model_adj[,\"Rice-a\"])\nSAM_model_adj2[\"Barley-a\",\"Barley-c\"]=sum(SAM_model_adj[,\"Barley-a\"])\n\ndRC2=rowSums(SAM_model_adj2)-colSums(SAM_model_adj2)\nprint(\"DRC2\")\nprint(dRC2)\n\n\nSAM_model_adj3=SAM_model_adj2\n\n# Step 3: consumption adjustment subtract Rowsum-Colsum in commodity columns from consumption and investment\n## subtract from household consumption if C-(Rowsum-colsum)>0\n## subtract from investment if C-(Rowsum-colsum)<=0 \nadjC_index=(which(SAM_model_adj2[((ind+2):(2*ind+1)),\"Household\"]>=dRC2[((ind+2):(2*ind+1))]))+ind+1\nSAM_model_adj3[adjC_index,\"Household\"]=SAM_model_adj2[adjC_index,\"Household\"]-dRC2[adjC_index]\n\nadjI_index=(which(SAM_model_adj2[((ind+2):(2*ind+1)),\"Household\"]<dRC2[((ind+2):(2*ind+1))]))+ind+1\nSAM_model_adj3[adjI_index,\"S-I\"]=SAM_model_adj2[adjI_index,\"S-I\"]-dRC2[adjI_index]\n\ndRC3=rowSums(SAM_model_adj3)-colSums(SAM_model_adj3)\nprint(\"DRC3\")\nprint(dRC3)\n\n#step 4: Factor income and tax revenue adjusment\nSAM_model_adj4=SAM_model_adj3\nSAM_model_adj4[\"Household\",\"Labor\"]=sum(SAM_model_adj3[\"Labor\",])\nSAM_model_adj4[\"Household\",\"Capital\"]=sum(SAM_model_adj3[\"Capital\",])\nSAM_model_adj4[\"GoV\",\"Ptaxin\"]=sum(SAM_model_adj3[\"Ptaxin\",])\nSAM_model_adj4[\"GoV\",\"Ptaxetc\"]=sum(SAM_model_adj3[\"Ptaxetc\",])\n\ndRC4=rowSums(SAM_model_adj4)-colSums(SAM_model_adj4)\nprint(\"DRC4\")\nprint(dRC4)\n\n#step 5: Residue income adjustment\n\nSAM_model_adj5=SAM_model_adj4\n\nres_r=SAM_model_adj4[,\"NRES\"]/sum(SAM_model_adj4[,\"NRES\"])\nadj_nres=dRC4[\"NRES\"]*res_r\n\nSAM_model_adj5[,\"NRES\"]=SAM_model_adj4[,\"NRES\"]+adj_nres\n\ndRC5=rowSums(SAM_model_adj5)-colSums(SAM_model_adj5)\nprint(\"DRC5\")\nprint(dRC5)\n\n#step 6: Household, Govenrment Savings Adjustment\n\nSAM_model_adj6=SAM_model_adj5\n\nSAM_model_adj6[\"S-I\",\"Household\"]=sum(SAM_model_adj5[\"Household\",])-sum(SAM_model_adj5[-which(rownames(SAM_model_adj5)==\"S-I\"),\"Household\"])\nSAM_model_adj6[\"S-I\",\"GoV\"]=sum(SAM_model_adj5[\"GoV\",])-sum(SAM_model_adj5[-which(rownames(SAM_model_adj5)==\"S-I\"),\"GoV\"])\n\ndRC6=rowSums(SAM_model_adj6)-colSums(SAM_model_adj6)\nprint(\"DRC6\")\nprint(dRC6)\n\n\n\nSAM_model_adj_ng=SAM_model_adj6\n\n#step 7:GHG adjustment(To be continued)\n\nGHG_model_adj=GHG_model\nGHG_com=setdiff(rownames(GHG_model_adj),c(\"process\",\"Total\"))\n\n\nSAM_w_Rice=SAM_model_adj[match(GHG_com,rownames(SAM_model_adj)),\"Rice-a\"]/rowSums(SAM_model_adj[match(GHG_com,rownames(SAM_model_adj)),c(\"Rice-a\",\"Barley-a\")])\nSAM_w_Rice[rowSums(SAM_model_adj[match(GHG_com,rownames(SAM_model_adj)),c(\"Rice-a\",\"Barley-a\")])==0]=0\n\nSAM_w_Barley=SAM_model_adj[match(GHG_com,rownames(SAM_model_adj)),\"Barley-a\"]/rowSums(SAM_model_adj[match(GHG_com,rownames(SAM_model_adj)),c(\"Rice-a\",\"Barley-a\")])\nSAM_w_Barley[rowSums(SAM_model_adj[match(GHG_com,rownames(SAM_model_adj)),c(\"Rice-a\",\"Barley-a\")])==0]=0\n\nGHG_model_adj[match(GHG_com,rownames(GHG_model_adj)),c(\"Rice.a\")]=rowSums(GHG_model[match(GHG_com,rownames(GHG_model)),c(\"Rice.a\",\"Barley.a\")])*SAM_w_Rice\nGHG_model_adj[match(GHG_com,rownames(GHG_model_adj)),c(\"Barley.a\")]=rowSums(GHG_model[match(GHG_com,rownames(GHG_model)),c(\"Rice.a\",\"Barley.a\")])*SAM_w_Barley\n\nGHG_model_adj[\"process\",\"Rice.a\"]=rowSums(GHG_model[\"process\",c(\"Rice.a\",\"Barley.a\")])*sum(SAM_model_adj_ng[,\"Rice-a\"])/sum(SAM_model_adj_ng[,c(\"Rice-a\",\"Barley-a\")])\nGHG_model_adj[\"process\",\"Barley.a\"]=rowSums(GHG_model[\"process\",c(\"Rice.a\",\"Barley.a\")])*sum(SAM_model_adj_ng[,\"Barley-a\"])/sum(SAM_model_adj_ng[,c(\"Rice-a\",\"Barley-a\")])\n\nGHG_model_adj=GHG_model_adj[,-1]\ndim_GHGadj=dim(GHG_model_adj)\n\nGHG_model_adj[\"Total\",]=colSums(GHG_model_adj[(1:(dim_GHGadj[1]-1)),])\nGHG_model_adj[,\"Total\"]=rowSums(GHG_model_adj[,(1:(dim_GHGadj[2]-1))])\ncolnames(GHG_model_adj)[1:ind]=colnames(SAM_model_adj_ng)[1:ind]\n\n#step 8:add CO2\n\nSAM_model_adj_g=SAM_model_adj6\nSAM_model_adj_g[\"CO2-c\",(1:ind)]=as.numeric(GHG_model_adj[\"Total\",(1:ind)])\nSAM_model_adj_g[\"GoV\",\"CO2-a\"]=sum(GHG_model_adj[\"Total\",(1:ind)])\nSAM_model_adj_g[\"CO2-a\",\"CO2-c\"]=sum(GHG_model_adj[\"Total\",(1:ind)])\nSAM_model_adj_g[(1:ind),\"GoV\"]=as.numeric(GHG_model_adj[\"Total\",(1:ind)])\ncheck_model_adj=max(abs(colSums(SAM_model_adj_g)-rowSums(SAM_model_adj_g)))\ncheck_model_adj\n\n#write.csv(SAM_model_ng,file=\"b_sam_36_ng.csv\")\n\n\n#write.csv(SAM_model,file=\"b_sam_36_g.csv\")\n#write.csv(SAM_gr,file=\"b_sam_group_g.csv\")\n#write.csv(SAM_br_ng,file=\"b_sam_agri_br_ng.csv\")\n#write.csv(SAM_br,file=\"b_sam_agri_br_g.csv\")\n\nwrite.csv(SAM_model_adj_ng,file=\"b_sam_agri_model_ng_pos_cons.csv\")\nwrite.csv(SAM_model_adj_g,file=\"b_sam_agri_model_g_pos_cons.csv\")\nwrite.csv(GHG_model_adj,file=\"GHG_agri_model_process_cons.csv\")\n#source(\"setwriting_agri_2016_alt_cons.r\")\n#source(\"parameter.r\")",
    "created" : 1469165536897.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "285170586",
    "id" : "76F00F31",
    "lastKnownWriteTime" : 1469148985,
    "path" : "C:/Users/sungw/OneDrive/work_2016/0000_Hybrid_2nd/CGE/SAM/Agri/samconst_pos_agri_consist_20160621.r",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 7,
    "source_on_save" : false,
    "type" : "r_source"
}