{
    "contents" : "## Loading bottom up io-cost files with separated grain (nnrice)\n\nCropmap=read.csv(\"cropmap_2016.csv\",header=T,as.is=T)\nCropT=read.csv(\"cropt_2016.csv\",header=T,as.is=T)\nCrop_data=merge(Cropmap,CropT,by=\"TC\",all=T)\n\nlsmap=read.csv(\"lsmap_2016.csv\",header=T,as.is=T)\nlsT=read.csv(\"lst_2016.csv\",header=T,as.is=T)\nls_data=merge(lsmap,lsT,by=\"TC\",all=T)\nncrop=9\nNLiveStock=5\n\n## merge io-sector mapping for TD model and merge it with io-cost model\niomap=read.csv(\"iomap_2016.csv\",header=T,as.is=T)\nCrop_data=merge(Crop_data,iomap,by=\"io\",all=T)\ncropname=paste(colnames(Crop_data)[3:(2+ncrop)],\"_piece\",sep=\"\")\nls_data=merge(ls_data,iomap,by=\"io\",all=T)\nlsname=paste(colnames(ls_data)[3:(2+NLiveStock)],\"_piece\",sep=\"\")\n\n## obtain io-cost pieces for each cost item in each Agriculture production\nfor (i in (3:(2+ncrop))){\n  piece_i=Crop_data[,i]*Crop_data[,(ncrop+i)]\n  Crop_data=cbind(Crop_data,piece_i)\n  colnames(Crop_data)[dim(Crop_data)[2]]=cropname[i-2]\n}\n\nfor (i in (3:(2+NLiveStock))){\n  piece_i=ls_data[,i]*ls_data[,(NLiveStock+i)]\n  ls_data=cbind(ls_data,piece_i)\n  colnames(ls_data)[dim(ls_data)[2]]=lsname[i-2]\n}\n\n## obtain cost describtion\n#Livestock BU cost item\nTC_LC=aggregate(ls_data[,((3+2*NLiveStock+1):(3+3*NLiveStock))],by=list(ls_data$TC),FUN=sum)\n#Livestock TD input item\nC_LC=aggregate(ls_data[,((3+2*NLiveStock+1):(3+3*NLiveStock))],by=list(ls_data$c),FUN=sum)\n#Crop BU cost item (grain separated)\nTC_Crop=aggregate(Crop_data[,((3+2*ncrop+1):(3+3*ncrop))],by=list(Crop_data$TC),FUN=sum)\n#Crop TD input item (grain separated)\nC_Crop=aggregate(Crop_data[,((3+2*ncrop+1):(3+3*ncrop))],by=list(Crop_data$c),FUN=sum)\n\n\nwrite.csv(C_Crop,file=\"C_Crop_2016_temp.csv\")\nwrite.csv(C_LC,file=\"C_LC_2016_temp.csv\")\n\n## Adjust grain in Rice and Barley\n# BU cost of Rice, Barley, Grain\nRiceBarley_adj=TC_Crop[,c(1:3,dim(TC_Crop)[2])]\n# Grain cost split in rice and barley and merge \nRiceBarleysplit=read.csv(\"riecbarleysplit_2016.csv\",header=T,as.is=T)\n# merge BU cost and Grain cost split\nRiceBarley_adj=merge(RiceBarley_adj,RiceBarleysplit, by.x=\"Group.1\", by.y=\"TC\",all=T)\n# Obtain Rice and Barley with Grain piece\nRiceBarley_adj$ricebase=RiceBarley_adj$rice.x_piece/RiceBarley_adj$Rice_o_r\nRiceBarley_adj$Barleybase=RiceBarley_adj$barley.x_piece/RiceBarley_adj$Barley_o_r\nRiceBarley_adj[RiceBarley_adj$Barley_o_r==0,\"Barleybase\"]=0\n# Obtain grain piece in Rice/Barley by Rice/Barley with grain - Rice/Barley without grain\nRiceBarley_adj$nrice_rice=RiceBarley_adj$ricebase-RiceBarley_adj$rice.x_piece\nRiceBarley_adj$nrice_Barley=RiceBarley_adj$Barleybase-RiceBarley_adj$barley.x_piece\n# Obtain ratio of Grain in Rice/Grain, Grain in Barley/Barley\nRiceBarley_adj$nrice_rice_ratio=RiceBarley_adj$nrice_rice/RiceBarley_adj$nrice.x_piece\nRiceBarley_adj$nrice_rice_ratio[RiceBarley_adj$nrice.x_piece==0]=0\nRiceBarley_adj$nrice_Barley_ratio=RiceBarley_adj$nrice_Barley/RiceBarley_adj$nrice.x_piece\nRiceBarley_adj$nrice_Barley_ratio[RiceBarley_adj$nrice.x_piece==0]=0\n\n## merge Crop BU cost data with adjusted Rice and Barley input data.\nCrop_data_adj=Crop_data\nCrop_data_adj=merge(Crop_data,RiceBarley_adj, by.x=\"TC\",by.y=\"Group.1\",as.is=T,all=T)\n\n##split nrice BU cost in io items\nCrop_data_adj$nrice_rice=Crop_data_adj$nrice.x_piece.x*Crop_data_adj$nrice_rice_ratio\nCrop_data_adj$nrice_Barley=Crop_data_adj$nrice.x_piece.x*Crop_data_adj$nrice_Barley_ratio\n\ncolSums(Crop_data[,22:dim(Crop_data)[2]])\n##Obtain io cost of Rice/Barley with grain = Rice/Barley without grain + Rice/Barley with grain\nCrop_data_adj$rice_piece_new=Crop_data_adj$rice.x_piece.x+Crop_data_adj$nrice_rice\nCrop_data_adj$Barley_piece_new=Crop_data_adj$barley.x_piece.x+Crop_data_adj$nrice_Barley\n\n#New Sam entry of Rice and Barley\nNewRiceandBarley=aggregate(Crop_data_adj[,(44:45)],by=list(Crop_data_adj$c),FUN=sum)\n\n#Recalculate TC io mapping coefficient\n\nNewTC=aggregate(Crop_data_adj[,c(\"rice_piece_new\",\"Barley_piece_new\")],by=list(Crop_data_adj$TC),FUN=sum)\ncolnames(NewTC)=c(\"TC\",\"NewRice_TC\",\"NewBarley_TC\")\n\nCrop_data_new=merge(Crop_data_adj,NewTC, by=\"TC\",all=T,as.is=T)\n\n## reconstruct Crop cost data with io-cost ratio. This time, ratio is adjusted for grain split in Rice/Barley\nCrop_data_new$rice.x_new=Crop_data_new$rice_piece_new/Crop_data_new$NewRice_TC\nCrop_data_new$rice.x_new[Crop_data_new$NewRice_TC==0]=0\nCrop_data_new$barley.x_new=Crop_data_new$Barley_piece_new/Crop_data_new$NewBarley_TC\nCrop_data_new$barley.x_new[Crop_data_new$NewBarley_TC==0]=0\n# check if new io cost ratio and new cost in Rice and Barley can reproduce SAM\nCrop_data_new$rice.x_trialpiece=Crop_data_new$rice.x_new*Crop_data_new$NewRice_TC\nCrop_data_new$barley.x_trialpiece=Crop_data_new$barley.x_new*Crop_data_new$NewBarley_TC\naggregate(Crop_data_new[,c(\"rice.x_trialpiece\",\"barley.x_trialpiece\")],by=list(Crop_data_new$TC),FUN=sum)\naggregate(Crop_data_new[,c(\"rice.x_trialpiece\",\"barley.x_trialpiece\")],by=list(Crop_data_new$c),FUN=sum)\n\ncroppieceindex=c(\"rice.x_trialpiece\",\"barley.x_trialpiece\",\"bean.x_piece\",\"potato.x_piece\",\"vegi.x_piece\",\"fruit.x_piece\",\"flower.x_piece\",\"misscrop.x_piece\")\n\nCostsum_crop=aggregate(Crop_data_new[,match(croppieceindex,colnames(Crop_data_new))],by=list(Crop_data_new$TC),FUN=sum)\nCostsum_LS=TC_LC\nInputsum_crop=aggregate(Crop_data_new[,match(croppieceindex,colnames(Crop_data_new))],by=list(Crop_data_new$c),FUN=sum)\nInputsum_LS=C_LC\nCostsum_crop\nInputsum_crop\nCostsum_LS\nInputsum_LS\n\niocostratio_index_Crop=c(\"io\",\"TC\",\"rice.x_new\", \"barley.x_new\" ,\"bean.x\" ,\"potato.x\" ,\"vegi.x\" ,\"fruit.x\" ,\"flower.x\" ,\"misscrop.x\" )\niocostratio_index_LS=c(\"io\",\"TC\",\"dairy.x\", \"meat.x\" ,\"pork.x\" ,\"poultry.x\" ,\"misslstock.x\" )\nICratio_crop=Crop_data_new[,match(iocostratio_index_Crop,colnames(Crop_data_new))]\nICratio_crop=ICratio_crop[do.call(order,ICratio_crop[,c(\"io\",\"TC\")]),]\nICratio_LS=ls_data[,match(iocostratio_index_LS,colnames(ls_data))]\nICratio_LS=ICratio_LS[do.call(order,ICratio_LS[,c(\"io\",\"TC\")]),]\n\nNamej_crop=c(\"rice\",   \"barley\", \"bean\",\"potato\",     \"vegi\",       \"fruit\",      \"flower\",    \"misscrop\")      \nNamea_crop=paste(Namej_crop,\"-a\",sep=\"\")\n\ncolnames(Costsum_crop)[2:(ncrop)]=Namej_crop\ncolnames(Inputsum_crop)[2:(ncrop)]=Namea_crop\ncolnames(ICratio_crop)[3:(ncrop+1)]=Namej_crop\n#Crop cost(BU item) data (Rice and Barley adjusted)\nwrite.csv(Costsum_crop,file=\"Newcost_crop_2016.csv\")\n#io cost ratio in Crop cost(Rice and Barley adjusted)\nwrite.csv(ICratio_crop,file=\"New_iocost_ratio_crop_2016.csv\")\n#Crop input(TD item) data (Rice and Barley adjusted)\nwrite.csv(Inputsum_crop,file=\"Newinput_crop_2016.csv\")\n#Rice Barley cost data (including grain)\nwrite.csv(NewRiceandBarley,file=\"ricebarley_new_2016.csv\")\n\nNamej_LS=c(\"dairy\",      \"meat\",       \"pork\",       \"poultry\",    \"misslstock\")\nNamea_LS=paste(Namej_LS,\"-a\",sep=\"\")\ncolnames(Costsum_LS)[2:(NLiveStock+1)]=Namej_LS\ncolnames(Inputsum_LS)[2:(NLiveStock+1)]=Namea_LS\ncolnames(ICratio_LS)[3:(NLiveStock+2)]=Namej_LS\n\n#Livstock cost(BU item) data \nwrite.csv(Costsum_LS,file=\"cost_LS_2016.csv\")\n#io cost ratio in Livestock cost(Rice and Barley adjusted)\nwrite.csv(ICratio_LS,file=\"iocost_ratio_LS_2016.csv\")\n#io cost ratio in Input cost(Rice and Barley adjusted)\nwrite.csv(Inputsum_LS,file=\"input_LS_2016.csv\")\n",
    "created" : 1469071383038.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3707412316",
    "id" : "CBA396E8",
    "lastKnownWriteTime" : 1469163662,
    "path" : "C:/Users/sungw/OneDrive/work_2016/0000_Hybrid_2nd/CGE/SAM/Agri/consistency/TCIOmap_2016.r",
    "project_path" : "TCIOmap_2016.r",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_source"
}