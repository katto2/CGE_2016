{
    "contents" : "#This file generates \"set_standard_recursive_2016.txt\". \n## For standard CGE, this file is the foundation of set generation.\n\nsam_model=read.csv(file=\"b_sam_model_ng_pos.csv\",header=T,as.is=T)\nghg=read.csv(file=\"GHG_model_p_20160621.csv\",header=T,as.is=T)\nsec_dict=read.csv(file=\"sector_BR.csv\",header=T,as.is=T)\nnsector=length(unique(sec_dict$sector_ind))\nsamsize=c(nsector,1,2,1,1,1,4,1,1,1)\nTmax=25\nLink=\"unLink\"\n#mode=2\nif(Link==\"Link\"){if (Tmax==0) {filename=\"set_agri_static_link_2016.txt\"} else  {filename=\"set_agri_recursive_link_2016.txt\"}} else {if (Tmax==0) {filename=\"set_agri_static_nonlink_2016.txt\"} else  {filename=\"set_agri_recursive_nonlink_2016.txt\"}}\nENC=c(\"GAS-c\",\"Gasoline-c\",\"Jetoil-c\",       \"Diesel-c\",       \"Kerosene-c\",     \"Fueloil-c\",      \"LPG-c\",\"Oilpro-c\",\"CoalPro-c\",\"Coal-c\",\"Oil-c\",\"LNG-c\" )\nELECC=c(\"ELEC-c\",\"HEAT-c\")\nSfuel=c(\"CoalPro-c\",\"Coal-c\")\n\nTransition=c(\"ELEC\",\"HEAT\")\nElecg=c(\"ELEC\")\nGasg=c(\"GAS\",\"LNG\")\nHeatg=c(\"HEAT\")\nOilg=c(\"Gasoline\",\"Jetoil\",       \"Diesel\",       \"Kerosene\",     \"Fueloil\",      \"LPG\",\"Oilpro\" )\nCoalg=c(\"CoalPro\",\"Coal\")\nAGRIC=c(\"Rice-c\",\t\"Barley-c\",\t\"Bean-c\",\t\"Potato-c\",\t\"Vegi-c\",\t\"Fruit-c\",\t\"Flower-c\",\t\"MissCrop-c\",\t\"Dairy-c\",\t\"Meat-c\",\t\"Pork-c\",\t\"Poultry-c\",\t\"MissLstock-c\")\nAGRIA=c(\"Rice-a\",\t\"Barley-a\",\t\"Bean-a\",\t\"Potato-a\",\t\"Vegi-a\",\t\"Fruit-a\",\t\"Flower-a\",\t\"MissCrop-a\",\t\"Dairy-a\",\t\"Meat-a\",\t\"Pork-a\",\t\"Poultry-a\",\t\"MissLstock-a\")\nLinkC=c(\"Rice-c\",\t\"Barley-c\",\t\"Bean-c\",\t\"Potato-c\",\t\"Vegi-c\",\t\"Fruit-c\",\t\"Flower-c\",\t\"MissCrop-c\",\t\"Dairy-c\",\t\"Meat-c\",\t\"Pork-c\",\t\"Poultry-c\",\t\"MissLstock-c\")\nLinkA=c(\"Rice-a\",\t\"Barley-a\",\t\"Bean-a\",\t\"Potato-a\",\t\"Vegi-a\",\t\"Fruit-a\",\t\"Flower-a\",\t\"MissCrop-a\",\t\"Dairy-a\",\t\"Meat-a\",\t\"Pork-a\",\t\"Poultry-a\",\t\"MissLstock-a\")\n\nif(Link!=\"Link\"){LinkC=NULL}\nif(Link!=\"Link\"){LinkA=NULL}\n\n\n\n\nsource(\"HC.r\")\nsink(file=filename)\n# (1) preperation\n\n\n## set column and low names with variable names\n### take the first column containing variable names and remove empty spaces\nsamnames=sam_model[,1]\nsamnames=sub(\"[[:space:]]+$\",\"\",samnames)\nghgnames=ghg[,1]\nghgnames=sub(\"[[:space:]]+$\",\"\",ghgnames)\n#ghgnames=c(paste(ghgnames[1:(length(ghgnames)-2)], \"-c\",sep=\"\"),ghgnames[(length(ghgnames)-1):length(ghgnames)])\n#ghgnames=c(\"GAS-c\",  \"ROIL-c\", \"CoalPro-c\", \"Coal-c\",   \"Process\", \"Total\")\n### remove the first column from the data seet\nsam_model=sam_model[,(2:(dim(sam_model)[2]))]\nghg=ghg[,(2:(dim(ghg)[2]))]\n### replace column names with variable names\ncolnames(sam_model)=samnames\n### replace row names with variable names\nrownames(sam_model)=samnames\nrownames(ghg)=ghgnames\nsam_model.raw=sam_model\n### indicating size\n\nind=samsize[1]\ngreen=samsize[2]\nfac=samsize[3]\nhh=samsize[4]\ngov=samsize[5]\nNres=samsize[6]\ntax=samsize[7]\nS_I=samsize[8]\nROW=samsize[9]\nTotal=samsize[10]\n\n#ACTP: all entry\nACTP=unique(c(samnames,ghgnames))\nsetwords=function(setname,domain,x){paste(setname,\"(\",domain,\") /\", HC.com(x),\" /\",sep='')}\nACTP.words=paste(\"ACTP\",\" /\",HC.com(ACTP),\" /\",sep='')\ncat(ACTP.words, sep='\\n')\n\n\n#ACT=ACT-\"process\"\n#ACT=setdiff(ACTP,setdiff(ghgnames,samnames))\nACT=ACTP[ACTP!=\"Process\"]\nACT.words=setwords(\"ACT\", \"ACTP\",ACT)\n#ACNT: null set\nACNT.words=\"ACNT(ACT)\"\ncat(ACT.words, sep='\\n')\ncat(ACNT.words, sep='\\n')\n\n#ghg dataset entry\n#GOT=ghgnames\n#GO=ghgnames[ghgnames!=\"Total\"]\n#GOT.words=setwords(\"GOT\",\"ACTP\",GOT)\n#GO.words=setwords(\"GO\",\"GOT\",GO)\n#cat(GOT.words, sep='\\n')\n#cat(GO.words, sep='\\n')\n\n\n#modification of whole entry\nAC=ACT[ACT!=\"Total\"]\nACNGT=ACT[(ACT!=\"CO2-a\")&(ACT!=\"CO2-c\")]\nACNGA=ACNGT[ACNGT!=\"Total\"]\nAC.words=setwords(\"AC\",\"ACT\",AC)\nACNGT.words=setwords(\"ACNGT\",\"ACT\",ACNGT)\nACNGA.words=setwords(\"ACNGA\",\"AC\",ACNGA)\ncat(AC.words, sep='\\n')\ncat(ACNGT.words, sep='\\n')\ncat(ACNGA.words, sep='\\n')\n\n\n#Activity and Commodity\nActivity=AC[1:ind]\nCommodity=AC[(ind+green+1):(2*(ind)+green)]\nActivity.words=setwords(\"A\",\"AC\",Activity)\nCommodity.words=setwords(\"C\",\"AC\",Commodity)\ncat(Activity.words,sep='\\n')\ncat(Commodity.words,sep='\\n')\n\n#IO AV section\nAV=sam_model[,Activity]\n\n#ENC : Energy commodities\nENCN=setdiff(Commodity,ENC)\nENC.words=setwords(\"ENC\",\"C\",ENC)\nENCN.words=setwords(\"ENCN\",\"C\",ENCN)\ncat(ENC.words, sep='\\n')\ncat(ENCN.words, sep='\\n')\n\n#AgriC: Agriculture commodities AgirA:Agriculture Activities\nAgriC.words=setwords(\"AgriC\",\"C\",AGRIC)\nAgriA.words=setwords(\"AGriA\",\"A\",AGRIA)\ncat(AgriC.words, sep='\\n')\ncat(AgriA.words, sep='\\n')\n\n#LinkC: Linked commodities AgirA:Linked Activities\nLinkC.words=setwords(\"LinkC\",\"C\",LinkC)\nLinkA.words=setwords(\"LinkA\",\"A\",LinkA)\nif (Link!=\"Link\"){cat(\"$onempty\",sep='\\n')}\ncat(LinkC.words, sep='\\n')\ncat(LinkA.words, sep='\\n')\nif (Link!=\"Link\"){cat(\"$offempty\",sep='\\n')}\n\n\n#Sfuel : Solid Fuel commodities\nSfuel.words=setwords(\"Sfuel\",\"C\",Sfuel)\ncat(Sfuel.words,sep=\"\\n\")\n\n#Lfuel : Liqoud Fuel commodities\nLfuel=setdiff(ENC,Sfuel)\nLfuel.words=setwords(\"Lfuel\",\"C\",Lfuel)\ncat(Lfuel.words,sep=\"\\n\")\n\n\n#ELECC: Electricity, ENERGY=ENC and ELECC, Material (M)=commodity - ENergy\n\nENERGY=c(ELECC,ENC)\nELECC.words=setwords(\"ELECC\",\"C\",ELECC)\ncat(ELECC.words,sep=\"\\n\")\nM=setdiff(Commodity,ENERGY)\nM.words=setwords(\"M\",\"C\",M)\ncat(M.words, sep='\\n')\n\n\n#Commodity and Activity Sets for energy gropus: Transition. Electricity. Gas. Heat. Oil. Coal\n\n\nTransition.c=paste(Transition,\"-c\",sep=\"\")\nElecg.c=paste(Elecg,\"-c\",sep=\"\")\nGasg.c=paste(Gasg,\"-c\",sep=\"\")\nHeatg.c=paste(Heatg,\"-c\",sep=\"\")\nOilg.c=paste(Oilg,\"-c\",sep=\"\")\nCoalg.c=paste(Coalg,\"-c\",sep=\"\")\n\nTransition.a=paste(Transition,\"-a\",sep=\"\")\nElecg.a=paste(Elecg,\"-a\",sep=\"\")\nGasg.a=paste(Gasg,\"-a\",sep=\"\")\nHeatg.a=paste(Heatg,\"-a\",sep=\"\")\nOilg.a=paste(Oilg,\"-a\",sep=\"\")\nCoalg.a=paste(Coalg,\"-a\",sep=\"\")\n\nTransition.c.words=setwords(\"TransitionC\",\"C\",Transition.c)\nElecg.c.words=setwords(\"ElecgC\",\"C\",Elecg.c)\nGasg.c.words=setwords(\"Gasgc\",\"C\",Gasg.c)\nHeatg.c.words=setwords(\"HeatgC\",\"C\",Heatg.c)\nOilg.c.words=setwords(\"Oilgc\",\"C\",Oilg.c)\nCoalg.c.words=setwords(\"Coalgc\",\"C\",Coalg.c)\n\ncat(Transition.c.words,sep=\"\\n\")\ncat(Elecg.c.words,sep=\"\\n\")\ncat(Gasg.c.words,sep=\"\\n\")\ncat(Heatg.c.words,sep=\"\\n\")\ncat(Oilg.c.words,sep=\"\\n\")\ncat(Coalg.c.words,sep=\"\\n\")\n\nTransition.a.words=setwords(\"TransitionA\",\"A\",Transition.a)\nElecg.a.words=setwords(\"ElecgA\",\"A\",Elecg.a)\nGasg.a.words=setwords(\"GasgA\",\"A\",Gasg.a)\nHeatg.a.words=setwords(\"HeatgA\",\"A\",Heatg.a)\nOilg.a.words=setwords(\"OilgA\",\"A\",Oilg.a)\nCoalg.a.words=setwords(\"CoalgA\",\"A\",Coalg.a)\n\ncat(Transition.a.words,sep=\"\\n\")\ncat(Elecg.a.words,sep=\"\\n\")\ncat(Gasg.a.words,sep=\"\\n\")\ncat(Heatg.a.words,sep=\"\\n\")\ncat(Oilg.a.words,sep=\"\\n\")\ncat(Coalg.a.words,sep=\"\\n\")\n\n\n#For each commodity, define uique set\n#Comset_name_1=paste(substring(setdiff(Commodity,ENC),1,6),\"C(C) /\",sep=\"\")\nComset_name_1=paste(substring(setdiff(Commodity,ENC),1,(nchar(setdiff(Commodity,ENC))-2)),\"C_s(C) /\",sep=\"\")\nComset_name_2=paste(substring(ENC,1,(nchar(ENC)-2)),\"ac_s(C) /\",sep=\"\")\nComset_name=c(Comset_name_1,Comset_name_2)\nComset_set=c(setdiff(Commodity,ENC),ENC)\nComset.words=paste(paste(Comset_name,Comset_set,sep=\"\"),\"/\",sep=\"\")\ncat(Comset.words, sep='\\n')\n\n\n\n#Contingency set of ELECC mix for each Activity\nQINT_ELECC=sam_model[ELECC,Activity]\nELECCpattern=lapply(QINT_ELECC,function(x){rownames(QINT_ELECC)[x>0]})\nELECCpattern=ELECCpattern[mapply(FUN=length,ELECCpattern)>0]\n#ELECCpattern=mapply(function(x){rownames(QINT_ELECC)[x>0]},QINT_ELECC)\n\nElecc.A={}\nfor (i in (1:length(ELECCpattern))){\n  #Fuel.A_i=HC.com(names(fuelpattern.v)[fuelpattern.v==fuelpattern_u.v[i]])\n  Elecc.A_i=paste(paste(names(ELECCpattern)[i],HC.com(ELECCpattern[[i]]),sep=\".(\"),\")\")\n  Elecc.A=rbind(Elecc.A,Elecc.A_i)\n}\ncat(\"EleccA(A,C)\",sep=\"\\n\")\ncat(\"/\",sep=\"\\n\")\ncat(Elecc.A,sep=\"\\n\")\ncat(\"/\",sep=\"\\n\")\n                            \n#Contingency set of fuel mix for each Activity\n\nQINT_FUEL=sam_model[ENC,Activity]\n\nfuelpattern=mapply(function(x){rownames(QINT_FUEL)[x>0]},QINT_FUEL)\n\nFuel.A={}\nfor (i in (1:ind)){\n                            #Fuel.A_i=HC.com(names(fuelpattern.v)[fuelpattern.v==fuelpattern_u.v[i]])\n                            Fuel.A_i=paste(paste(names(fuelpattern)[i],HC.com(fuelpattern[[i]]),sep=\".(\"),\")\")\n                            Fuel.A=rbind(Fuel.A,Fuel.A_i)\n}\ncat(\"FuelA(A,C)\",sep=\"\\n\")\ncat(\"/\",sep=\"\\n\")\ncat(Fuel.A,sep=\"\\n\")\ncat(\"/\",sep=\"\\n\")\n\n\n\n#Greenhouse gas.Commodity\nGC=\"CO2-c\"\nGC.words=setwords(\"GC\",\"AC\",GC)\ncat(GC.words, sep='\\n')\n\n# contingency set of sfuel mix for Activity\n\nQINT_SFUEL=sam_model[Sfuel,Activity]\nsfuelpattern=lapply(QINT_SFUEL,function(x){rownames(QINT_SFUEL)[x>0]})\nsfuelpattern=sfuelpattern[mapply(FUN=length,sfuelpattern)>0]\nSFuel.A={}\nfor (i in (1:length(sfuelpattern))){\n  #Fuel.A_i=HC.com(names(fuelpattern.v)[fuelpattern.v==fuelpattern_u.v[i]])\n  SFuel.A_i=paste(paste(names(sfuelpattern)[i],HC.com(sfuelpattern[[i]]),sep=\".(\"),\")\")\n  SFuel.A=rbind(SFuel.A,SFuel.A_i)\n}\ncat(\"SFuelA(A,C)\",sep=\"\\n\")\ncat(\"/\",sep=\"\\n\")\ncat(SFuel.A,sep=\"\\n\")\ncat(\"/\",sep=\"\\n\")\n\n# contingency set of Lfuel mix for Activity\n\nQINT_LFUEL=sam_model[Lfuel,Activity]\nLfuelpattern=lapply(QINT_LFUEL,function(x){rownames(QINT_LFUEL)[x>0]})\nLfuelpattern=Lfuelpattern[mapply(FUN=length,Lfuelpattern)>0]\nLFuel.A={}\nfor (i in (1:length(Lfuelpattern))){\n  #Fuel.A_i=HC.com(names(fuelpattern.v)[fuelpattern.v==fuelpattern_u.v[i]])\n  LFuel.A_i=paste(paste(names(Lfuelpattern)[i],HC.com(Lfuelpattern[[i]]),sep=\".(\"),\")\")\n  LFuel.A=rbind(LFuel.A,LFuel.A_i)\n}\ncat(\"LFuelA(A,C)\",sep=\"\\n\")\ncat(\"/\",sep=\"\\n\")\ncat(LFuel.A,sep=\"\\n\")\ncat(\"/\",sep=\"\\n\")\n\n# contingency set of ghg generating fuel mix for Activity\n\ncolnames(ghg)[1:ind]=Activity\nghg_a=ghg[!is.na(match(rownames(ghg),ENC)),Activity]\nGfuelpattern=lapply(ghg_a,function(x){rownames(ghg_a)[x>0]})\nGfuelpattern=Gfuelpattern[mapply(FUN=length,Gfuelpattern)>0]\nGfuel.A={}\nfor (i in (1:length(Gfuelpattern))){\n  Gfuel.A_i=paste(paste(names(Gfuelpattern)[i],HC.com(Gfuelpattern[[i]]),sep=\".(\"),\")\")\n  Gfuel.A=rbind(Gfuel.A,Gfuel.A_i)\n}\ncat(\"GfuelA(A,C)\",sep=\"\\n\")\ncat(\"/\",sep=\"\\n\")\ncat(Gfuel.A,sep=\"\\n\")\ncat(\"/\",sep=\"\\n\")\n\n#Contingency set of Agriculture input mix for each Activity\nQINT_AGRI=sam_model[AGRIC,Activity]\nAGRICpattern=lapply(QINT_AGRI,function(x){rownames(QINT_AGRI)[x>0]})\nAGRICpattern=AGRICpattern[mapply(FUN=length,AGRICpattern)>0]\n#ELECCpattern=mapply(function(x){rownames(QINT_ELECC)[x>0]},QINT_ELECC)\n\nAGRIC.A={}\nfor (i in (1:length(AGRICpattern))){\n  #Fuel.A_i=HC.com(names(fuelpattern.v)[fuelpattern.v==fuelpattern_u.v[i]])\n  AGRIC.A_i=paste(paste(names(AGRICpattern)[i],HC.com(AGRICpattern[[i]]),sep=\".(\"),\")\")\n  AGRIC.A=rbind(AGRIC.A,AGRIC.A_i)\n}\ncat(\"AgricA(A,C)\",sep=\"\\n\")\ncat(\"/\",sep=\"\\n\")\ncat(AGRIC.A,sep=\"\\n\")\ncat(\"/\",sep=\"\\n\")\n\n\n# commodity-activity mapping\nQINT_AC=sam_model[Activity,Commodity]\nACpattern=lapply(QINT_AC,function(x){rownames(QINT_AC)[x>0]})\nACpattern=ACpattern[mapply(FUN=length,ACpattern)>0]\nAC.A={}\nfor (i in (1:length(ACpattern))){\n  #Fuel.A_i=HC.com(names(fuelpattern.v)[fuelpattern.v==fuelpattern_u.v[i]])\n  AC.A_i=paste(paste(names(ACpattern)[i],HC.com(ACpattern[[i]]),sep=\".(\"),\")\")\n  AC.A=rbind(AC.A,AC.A_i)\n}\ncat(\"XPXC(C,A)\",sep=\"\\n\")\ncat(\"/\",sep=\"\\n\")\ncat(AC.A,sep=\"\\n\")\ncat(\"/\",sep=\"\\n\")\n\n\n# Activities holing each M and Electricity as intermediate input\n\nQINT=sam_model[c(ELECC,M),Activity]\nT_QINT=data.frame(t(QINT))\ncolnames(T_QINT)=rownames(QINT)\nPositive.int.demand=lapply(T_QINT,function(x){rownames(T_QINT)[x>0]})\nPositive.int.demand=Positive.int.demand[mapply(FUN=length,Positive.int.demand)>0]\nCA.A={}\nfor (i in (1:length(Positive.int.demand))){\n  #Fuel.A_i=HC.com(names(fuelpattern.v)[fuelpattern.v==fuelpattern_u.v[i]])\n  CA.A_i=paste(paste(names(Positive.int.demand)[i],HC.com(Positive.int.demand[[i]]),sep=\".(\"),\")\")\n  CA.A=rbind(CA.A,CA.A_i)\n}\ncat(\"XAPA(C,A)\",sep=\"\\n\")\ncat(\"/\",sep=\"\\n\")\ncat(CA.A,sep=\"\\n\")\ncat(\"/\",sep=\"\\n\")\n\n# Activities holing each fuel as intermediate input\nQCE=sam_model[ENC,Activity]\nT_QCE=data.frame(t(QCE))\ncolnames(T_QCE)=rownames(QCE)\nPositive.enc.demand=lapply(T_QCE,function(x){rownames(T_QCE)[x>0]})\nPositive.enc.demand=Positive.enc.demand[mapply(FUN=length,Positive.enc.demand)>0]\nENCA.A={}\nfor (i in (1:length(Positive.enc.demand))){\n  #Fuel.A_i=HC.com(names(fuelpattern.v)[fuelpattern.v==fuelpattern_u.v[i]])\n  ENCA.A_i=paste(paste(names(Positive.enc.demand)[i],HC.com(Positive.enc.demand[[i]]),sep=\".(\"),\")\")\n  ENCA.A=rbind(ENCA.A,ENCA.A_i)\n}\ncat(\"XEPA(C,A)\",sep=\"\\n\")\ncat(\"/\",sep=\"\\n\")\ncat(ENCA.A,sep=\"\\n\")\ncat(\"/\",sep=\"\\n\")\n\n#Non household (Domestic) Final demand: FD\n\nFD=c(\"GoV\",\"S-I\")\ncat(paste(paste(\"FD(ACT) \",HC.com(FD),sep=\"/\"),\"/\"),sep=\"\\n\")\n\n#Final demand mix for non household institutions   \n\nXFA=sam_model[Commodity,match(FD,colnames(sam_model))]\nT_XFA=data.frame(t(XFA))\ncolnames(T_XFA)=rownames(XFA)\nPositive.fin.demand=lapply(T_XFA,function(x){rownames(T_XFA)[x!=0]})\nPositive.fin.demand=Positive.fin.demand[mapply(FUN=length,Positive.fin.demand)>0]\nXFA.A={}\nfor (i in (1:length(Positive.fin.demand))){\n  #Fuel.A_i=HC.com(names(fuelpattern.v)[fuelpattern.v==fuelpattern_u.v[i]])\n  XFA.A_i=paste(paste(names(Positive.fin.demand)[i],HC.com(Positive.fin.demand[[i]]),sep=\".(\"),\")\")\n  XFA.A=rbind(XFA.A,XFA.A_i)\n}\ncat(\"FD_C(C,FD)\",sep=\"\\n\")\ncat(\"/\",sep=\"\\n\")\ncat(XFA.A,sep=\"\\n\")\ncat(\"/\",sep=\"\\n\")\n\n\n\n#Factors as a subset of AC\nFACTOR.endow=ACT[(2*(ind+green)+1):(2*(ind+green)+fac)]\nLabor=FACTOR.endow[1]\nCapital=FACTOR.endow[2]\nFACTOR.words=paste(\"F(AC) /\",HC.com(FACTOR.endow),\"/\",sep='')\nLabor.words=paste(\"L(F) /\",Labor,\"/\",sep='')\nCapital.words=paste(\"K(F) /\",Capital,\"/\",sep='')\n\nFACTOR.words=setwords(\"F\",\"AC\",FACTOR.endow)\nLabor.words=setwords(\"L\",\"F\",Labor)\nCapital.words=setwords(\"K\",\"F\",Capital)\n\ncat(FACTOR.words, sep='\\n')\ncat(Labor.words, sep='\\n')\ncat(Capital.words, sep='\\n')\n\n\n\n\n#Institution as a subset of AC\n\nINS=ACT[(2*(ind+green)+fac+hh):(2*(ind+green)+fac+hh+gov+Nres+tax+S_I+ROW)]\nINSD=setdiff(INS,INS[length(INS)])\nINSDN=INS[length(INS)]\nH=ACT[(2*(ind+green)+fac+1):(2*(ind+green)+fac+hh)]\nINS.words=setwords(\"INS\",\"AC\",INS)\nINSD.words=setwords(\"INSD\",\"INS\",INSD)\nINSDN.words=setwords(\"INSDN\",\"INS\",INSDN)\nH.words=setwords(\"H\",\"INSD\",H)\n\ncat(INS.words,sep='\\n')\ncat(INSD.words,sep='\\n')\ncat(INSDN.words,sep='\\n')\ncat(H.words,sep='\\n')\n\n# Comodities with positive household demand XACH(H,C)\n\nHCC=data.frame(sam_model[Commodity,match(H,colnames(sam_model))])\ncolnames(HCC)=H\nrownames(HCC)=Commodity\ncat(\"XACH(H,C)\",sep=\"\\n\")\ncat(\"/\",sep=\"\\n\")\ncat(paste(\"Household\",rownames(HCC)[HCC>0],sep=\".\"),sep=\"\\n\")\ncat(\"/\",sep=\"\\n\")\n\n## Energy Plan target industries\n#Agrimin(A) /Agri-a,Mining-a/\n  #Manufact(A)/IS-a,Cement-a,Orgchem-a,WoodPaper-a,FiberLeather-a,Mineral-a,nonISmetal-a,Machine-a,Electro_e-a,Electro_ne-a,Electro_sig-a,semicon-a,Auto-a,Ship-a,Food-a,MissManu-a/\n  #RoilChemM(A)/IS-a,Orgchem-a,nonISmetal-a/\n  #FabMetal(A)/Machine-a,Electro_e-a,Electro_ne-a,Electro_sig-a,semicon-a,Auto-a,Ship-a/\n  #SOC(A)/Const-a/\n  #Service(A)/Housing-a,Commercial-a,Public-a,Waste-a/\n  #Other(A)/Oil-a,LNG-a,Rail-a,Road-a,Air-a,Marine-a,MissTrans-a/\n  #Energy(A)/ELEC-a,GAS-a,HEAT-a,ROIL-a,CoalPro-a,Coal-a/\n  #ELECA(A)/Elec-a/\n#HEATA(A)/Heat-a/\n  \nAgrimin=c(\"Agri-a\",\"Mining-a\")\nManufact=c(\"IS-a\",\"Cement-a\",\"Orgchem-a\",\"WoodPaper-a\",\"FiberLeather-a\",\"Mineral-a\",\"nonISmetal-a\",\"Machine-a\",\"Electro_e-a\",\"Electro_ne-a\",\"Electro_sig-a\",\"semicon-a\",\"Auto-a\",\"Ship-a\",\"Food-a\",\"MissManu-a\")\nRoilChemM=c(\"IS-a\",\"Orgchem-a\",\"nonISmetal-a\")\nFabMetal=c(\"Machine-a\",\"Electro_e-a\",\"Electro_ne-a\",\"Electro_sig-a\",\"semicon-a\",\"Auto-a\",\"Ship-a\")\nSOC=c(\"Const-a\")\nService=c(\"Housing-a\",\"Commercial-a\",\"Public-a\",\"Waste-a\")\nOther=c(\"Oil-a\",\"LNG-a\",\"Rail-a\",\"Road-a\",\"Air-a\",\"Marine-a\",\"MissTrans-a\")\nEnergyA=c(\"ELEC-a\",\"GAS-a\",\"HEAT-a\",\"ROIL-a\",\"CoalPro-a\",\"Coal-a\")\nELECA=c(\"Elec-a\")\nHEATA=c(\"Heat-a\")\n\n#Agrimin.words=setwords(\"Agrimin\",\"A\",Agrimin)\n#Manufact.words=setwords(\"Manufact\",\"A\",Manufact)\n#RoilChemM.words=setwords(\"RoilChemM\",\"A\",RoilChemM)\n#FabMetal.words=setwords(\"FabMetal\",\"A\",FabMetal)\n#SOC.words=setwords(\"SOC\",\"A\",SOC)\n#Service.words=setwords(\"Service\",\"A\",Service)\n#Other.words=setwords(\"Other\",\"A\",Other)\n#EnergyA.words=setwords(\"Energy\",\"A\",EnergyA)\n#ELECA.words=setwords(\"ELECA\",\"A\",ELECA)\n#HEATA.words=setwords(\"HEATA\",\"A\",HEATA)\n\n#cat(Agrimin.words, sep='\\n')\n#   cat(Manufact.words, sep='\\n')\n#       cat(RoilChemM.words, sep='\\n')\n#           cat(FabMetal.words, sep='\\n')\n#               cat(SOC.words, sep='\\n')\n#                   cat(Service.words, sep='\\n')\n#                       cat(Other.words, sep='\\n')\n#                           cat(EnergyA.words, sep='\\n')\n#                               cat(ELECA.words, sep='\\n')\n#                                   cat(HEATA.words, sep='\\n')\n\n\n#time horizon\ncat(\"t\",sep=\"\\n\")\ncat(\"/\",sep=\"\\n\")\nif (Tmax==0){cat(\"0\",sep=\"\\n\")} else{cat(paste(\"0\",Tmax,sep=\"*\"),sep=\"\\n\")}\ncat(\"/\",sep=\"\\n\")\n\n\n#Alias\nAlias1=c(\"ACT\",\"INS\",\"AC\",\"A\",\"C\",\"F\",\"L\",\"K\",\"H\",\"GC\")\nAlias2=c(\"ACTPP\",\"INSP\",\"ACP\",\"AP\",\"CP\",\"FP\",\"LP\",\"KP\",\"HP\",\"GCP\")\nAlias=cbind(Alias1,Alias2)\n#Alias\nAlias.words=paste(\"Alias(\", Alias1, \",\", Alias2, \");\",sep=\"\")\ncat(Alias.words,sep='\\n')\n\n#set modification\nModification.words=c(\"ACNT(ACT)=yes;\",\"ACNT('Total')=no;\")\ncat(Modification.words,sep='\\n')\n#}\n\n\n#Agriculture singleton parameter: 0 for singleton, 1 for nonsingleton\n\nAgri_d=sam_model[AGRIC,Activity]\n\nAgrimix=data.frame(mapply(function(x){sum(as.numeric(x>0))},Agri_d))\n\nAgrimix_zero=(Agrimix==0)\nind_nonzero_Agrimix=rownames(Agrimix)[!Agrimix_zero]\n\nAgrimix_nonzero=data.frame(Agrimix[!Agrimix_zero])\nrownames(Agrimix_nonzero)=ind_nonzero_Agrimix\n\nAgrimix_one=(Agrimix_nonzero==1)\n\nAgrimix_nonzero[Agrimix_one]=0\nAgrimix_nonzero[!Agrimix_one]=1\ncolnames(Agrimix_nonzero)=\" \"\n\ncat(\"Parameters\",\"\\n\")\ncat(\"Agri_single(A)\",\"\\n\")\ncat(\"/\",\"\\n\")\nprint(Agrimix_nonzero)\ncat(\"/\",\"\\n\")\n\n# Lfuel singleton parameter : 0 for singleton, 1 for nonsingleton\n\nLfuel_d=sam_model[Lfuel,Activity]\n\nLfuelmix=data.frame(mapply(function(x){sum(as.numeric(x>0))},Lfuel_d))\n\nLfuelmix_zero=(Lfuelmix==0)\nind_nonzero_Lfuelmix=rownames(Lfuelmix)[!Lfuelmix_zero]\n\nLfuelmix_nonzero=data.frame(Lfuelmix[!Lfuelmix_zero])\nrownames(Lfuelmix_nonzero)=ind_nonzero_Lfuelmix\n\nLfuelmix_one=(Lfuelmix_nonzero==1)\n\nLfuelmix_nonzero[Lfuelmix_one]=0\nLfuelmix_nonzero[!Lfuelmix_one]=1\ncolnames(Lfuelmix_nonzero)=\" \"\n\ncat(\"Parameter\",\"\\n\")\ncat(\"Lfuel_single(A)\",\"\\n\")\ncat(\"/\",\"\\n\")\nprint(Lfuelmix_nonzero)\ncat(\"/\",\"\\n\")\n\n\n# Sfuel singleton parameter : 0 for singleton, 1 for nonsingleton\n\nSfuel_d=sam_model[Sfuel,Activity]\n\nSfuelmix=data.frame(mapply(function(x){sum(as.numeric(x>0))},Sfuel_d))\n\nSfuelmix_zero=(Sfuelmix==0)\nind_nonzero_Sfuelmix=rownames(Sfuelmix)[!Sfuelmix_zero]\n\nSfuelmix_nonzero=data.frame(Sfuelmix[!Sfuelmix_zero])\nrownames(Sfuelmix_nonzero)=ind_nonzero_Sfuelmix\n\nSfuelmix_one=(Sfuelmix_nonzero==1)\n\nSfuelmix_nonzero[Sfuelmix_one]=0\nSfuelmix_nonzero[!Sfuelmix_one]=1\ncolnames(Sfuelmix_nonzero)=\" \"\n\n#cat(\"Parameter\",\"\\n\")\ncat(\"Sfuel_single(A)\",\"\\n\")\ncat(\"/\",\"\\n\")\nprint(Sfuelmix_nonzero)\ncat(\"/\",\"\\n\")\n\n# ELECC singleton parameter : 0 for singleton, 1 for nonsingleton\n\nELECC_d=sam_model[ELECC,Activity]\n\nelecmix=data.frame(mapply(function(x){sum(as.numeric(x>0))},ELECC_d))\n\nelecmix_zero=(elecmix==0)\nind_nonzero_elecmix=rownames(elecmix)[!elecmix_zero]\n\nelecmix_nonzero=data.frame(elecmix[!elecmix_zero])\nrownames(elecmix_nonzero)=ind_nonzero_elecmix\n\nelecmix_one=(elecmix_nonzero==1)\n\nelecmix_nonzero[elecmix_one]=0\nelecmix_nonzero[!elecmix_one]=1\ncolnames(elecmix_nonzero)=\" \"\n\n#cat(\"Parameter\",\"\\n\")\ncat(\"ELECC_single(A)\",\"\\n\")\ncat(\"/\",\"\\n\")\nprint(elecmix_nonzero)\ncat(\"/\",\"\\n\")\n\n#Labor=c(\"Labor\")\n#Capital=c(\"Capital\")\n\n\n# capital singleton parameter: 0 for singleton 1 for nonsingleton \n\ncap_d=sam_model[Capital,Activity]\n\ncapmix=data.frame(mapply(function(x){sum(as.numeric(x>0))},cap_d))\n\ncapmix_zero=(capmix==0)\nind_nonzero_capmix=rownames(capmix)[!capmix_zero]\n\ncapmix_nonzero=data.frame(capmix[!capmix_zero])\nrownames(capmix_nonzero)=ind_nonzero_capmix\n\ncapmix_one=(capmix_nonzero==1)\n\ncapmix_nonzero[capmix_one]=0\ncapmix_nonzero[!capmix_one]=1\ncolnames(capmix_nonzero)=\" \"\n\n#cat(\"Parameter\",\"\\n\")\ncat(\"K_single(A)\",\"\\n\")\ncat(\"/\",\"\\n\")\nprint(capmix_nonzero)\ncat(\"/\",\"\\n\")\n\n# labor singleton parameter: 0 for singleton 1 for nonsingleton \n\nlab_d=sam_model[Labor,Activity]\n\nlabmix=data.frame(mapply(function(x){sum(as.numeric(x>0))},lab_d))\n\nlabmix_zero=(labmix==0)\nind_nonzero_labmix=rownames(labmix)[!labmix_zero]\n\nlabmix_nonzero=data.frame(labmix[!labmix_zero])\nrownames(labmix_nonzero)=ind_nonzero_labmix\n\nlabmix_one=(labmix_nonzero==1)\n\nlabmix_nonzero[labmix_one]=0\nlabmix_nonzero[!labmix_one]=1\ncolnames(labmix_nonzero)=\" \"\n\n#cat(\"Parameter\",\"\\n\")\ncat(\"L_single(A)\",\"\\n\")\ncat(\"/\",\"\\n\")\nprint(labmix_nonzero)\ncat(\"/\",\"\\n\")\n\n\n\nsink()\n",
    "created" : 1469164564597.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2351809206",
    "id" : "F2E22954",
    "lastKnownWriteTime" : 1468992948,
    "path" : "C:/Users/sungw/OneDrive/work_2016/0000_Hybrid_2nd/CGE/SAM/Agri/setwriting_agri_2016.r",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "type" : "r_source"
}